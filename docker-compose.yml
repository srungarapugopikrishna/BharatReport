
services:
  # PostgreSQL Database with PostGIS
  postgres:
    image: postgis/postgis:15-3.3
    container_name: janata-postgres
    environment:
      POSTGRES_DB: janata_report
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: janata123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./server/scripts:/docker-entrypoint-initdb.d
    networks:
      - janata-network

  # Backend API Server
  backend:
    build:
      context: .
      dockerfile: config/Dockerfile.backend
    container_name: janata-backend
    environment:
      NODE_ENV: development
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: janata_report
      DB_USER: postgres
      DB_PASSWORD: janata123
      JWT_SECRET: your-super-secret-jwt-key-here
      PORT: 5000
      CLIENT_URL: http://localhost:3000
    ports:
      - "5000:5000"
    depends_on:
      - postgres
    volumes:
      - /app/node_modules
    networks:
      - janata-network
    command: npm run dev

  # Frontend React App
  frontend:
    build:
      context: .
      dockerfile: config/Dockerfile.frontend
    container_name: janata-frontend
    environment:
      REACT_APP_API_URL: http://localhost:5000/api
      REACT_APP_GOOGLE_MAPS_API_KEY: your_google_maps_api_key
    ports:
      - "3000:3000"
    volumes:
      - ./client:/app
      - /app/node_modules
    networks:
      - janata-network
    command: npm start

volumes:
  postgres_data:

networks:
  janata-network:
    driver: bridge
